{"name":"Light Sword Xcom2 mod tutorial.","tagline":"Light sword xcom2 mod, with tutorial on how to create your own custom weapons.","body":"This mod adds a light sword to xcom, inspired by star wars, and the sword has its own stats, different from other weapons. This sword has more armor penetration than the best xcom2 sword, wich makes it a clear improvement(The creation of this mod was for fun and for experimentation, it was never the goal to actually do a balanced weapon).\r\n\r\nOn this page ill explain how it works, and how can you create your own weapon, it doesnt have to be a sword, it can be ANY weapon of the game.\r\n\r\n## Setting up your mod\r\n\r\nFirst of all, you have to download the Xcom2 development tools in steam, wich are under the software category on your library. You need to have xcom 2 installed to be able to install them. After the 66 gigabyte install its finished, then you will have an special version of xcom from the normal game, this one its unpacked and has all the scripts and data needed to change them, alongside the full unreal engine editor, albeit its the modified Xcom2 version.\r\nFollow the quickstart documentation at \\XCOM 2 SDK\\Documentation \r\nThat one will teach you how to setup your visual studio and create the project.\r\nThe WeaponMod template adds a machinegun to the game, as a new type of weapon. We are going to ignore it and create our own sword.\r\n\r\n## Explanation of WTF is the stuff in the WeaponMod project\r\nThat project its an example on how to add a rifle, with custom models. It has several parts. Under the Content folder you have 2 .upk files, you can ignore the ModShaderCache one, that one its automatically generated and not even needed. But the other one, its the one that has the assets for the gun.\r\nIn the config folder you have some edits to the global configuration projects. If you add something here, when you add the mod it will be loaded by the engine. So if your mod its only config file edits, you can do those edits here and they will be added. The default config files in the weaponmod project just \"link\" to the WeaponMod mod so its identified.\r\nThe meat of the mod its the 2 script files, under Src/WeaponMod/Classes. The X2DownloadableContentInfo_ExampleWeapon.uc file its the information of the mod, it can be called on a few different events, but the example uses OnLoadedSavedGame(), where it adds the weapon to the HQ inventory. \r\nThe most important code its this\r\n       \r\n\r\n\r\n        //Make the changes to the HQ state. Here we add items to the HQ's inventory\r\n\tItemTemplate = ItemMgr.FindItemTemplate('ModWeapon_CV');\r\n\t\t\r\n\t//Instantiate a new item state object using the template.\r\n\tItemState = ItemTemplate.CreateInstanceFromTemplate(NewGameState);\r\n\tNewGameState.AddStateObject(ItemState);\r\n\r\n\t//Add the newly created item to the HQ inventory\r\n\tNewXComHQState.AddItemToHQInventory(ItemState);\t`\r\n\r\nThis code takes care of finding the Template for the ModWeapon(a template contains the data relevant to a item, like the mesh it uses, or the damage, its what we are going to edit)\r\nAnd then adds it to the HQ inventory.\r\n\r\nYou could add an item only when a campaign is started by doing that code in the InstallNewCampaign function.\r\n\r\nThe X2Item_ModExample_Weapon.uc its the one that takes care of defining the weapon template than then gets created by the game\r\n\r\nThe CreateTemplates function returns the templates on that file, there is no need to have one of those files per item, you can have as many as you want in one file. Xcom2 has a file with most of the weapons in a single place.\r\nThe template for the gun its created by the function  CreateTemplate_ModWeapon_Conventional()\r\nThe most interesting thing on that function its \r\n\r\n\r\n    \\`CREATE_X2TEMPLATE(class'X2WeaponTemplate', Template, 'ModWeapon_CV');\r\n\r\n\r\n\r\nThat its a macro in unrealscript, and it defines the template name and type. The name should be unique, i havent tested what happens if you override other template. As you can see, the name(3rd parameter) its the same we use in the other file to get the item template to then add to inventory. That name its very important and will be the main way of referring to the weapon we are adding.\r\n\r\nAfter it, there is a few variables wich should be self explanatory, as they define the variables and habilities the weapon has, like Reload (yes, reload its a weapon specific hability) \r\nas you can se at\r\n\r\n\t\r\n\r\n        // Enhancements we're making to base\r\n\t//=====================================================================\r\n\tTemplate.BaseDamage.Damage += 2; //Boost damage\r\n\tTemplate.CritChance += 5; //Boost crit\r\n\tTemplate.Abilities.AddItem('Suppression'); //This weapon confers suppression\r\n\tTemplate.GameArchetype = \"WP_ModExampleWeapon_CV.WP_ModExampleWeapon_CV\"; //Use a custom archetype\r\n\t//=====================================================================\r\n\r\n\r\n\r\nThe gun has +2 damage over the basic assault rifle, +5 crit chance, adds suppression, and uses a different archetype.\r\nThe GameArchetype its what defines wich mesh, animations, or effects the weapon has.\r\n\r\n## Editing assets\r\n\r\nThe .upk packages are impossible to open with anything that isnt Unreal Engine 3. And if you try to open this ones with UDK, for example, they wont probably work. You need to open them from the actual XCom version of unreal engine. To launch it, you have to go to TOOLS on visual studio, and then XCOM 2 Editor.\r\nFrom the editor content browser, you need to open the package, its the little folder icon. The package path can be found by clicking on the package on visual studio, and at the right it should say the path of it. That ones are the one that you can edit. After opening the package, you can browse the assets inside, alongside ALL xcom2 assets. From here you can import meshes, or change the archetypes of a weapon.\r\n\r\n## Customizing the weapon, adding a sword instead of a rifle\r\nFirst of all, we are going to delete everything that is inside the CreateTemplate_ModWeapon_Conventional() function.\r\nWe are going to grab the template configuration from the basic XCOM sword. For that we need to find where its that template defined, wich is X2Item_DefaultWeapons.uc, under XCOM 2 SDK/Development/Src/XComGame. That file has most of the weapons in the game, alongside some things like the Gremlins. \r\nThe basic sword its defined at the function CreateTemplate_Sword_Conventional() (see,pretty much the same as the mod one)\r\nJust copypaste everything inside that function into the mod function. After that, we have to change a few things:\r\nthe CREATE_X2TEMPLATE has \"Sword_CV\" as name, change it to the original,  wich is ModWeapon_CV. Also, if you try to compile it, it will give a compile error as it cant find the ALLCAPS_CONFIGURATION_CONSTANTS . To let it find it, you need to switch those default.ALLCAPS for class'X2Item_DefaultWeapons'.default.ALLCAPS\r\nRight now, you should have a clone of the default sword, just with a different template name and a different entry on the inventory. Of course, we want to change its stats, so lets do it.\r\nJust before the return, add:\r\n\r\n\r\n\r\n     //minus 1 damage\r\n     Template.BaseDamage.Damage -= 1;\r\n     //plus 1 shred armor\r\n     Template.BaseDamage.Shred += 1;\r\n     //plus 10 critchance\r\n     Template.CritChance+= 10;\r\n\r\n\r\nThis changes the weapon a bit, first, it lowers the damage, and then it adds shred and crit chance. You could say this could work as some kind of specialist crit weapon, or as an anti armor sword, but it does less damage to normal enemies.\r\nYou should be able to try this, for that, try go to BUILD -> Build solution, wich will build the scripts. IT should go fine, if it doesnt, read this again and take a look at the source code for the mod. After the project its conpiled fine, go to Debug, and Start Debugging. A xcom 2 mod launcher should appear, so enable your WeaponMod mod. \r\nAfter you launch xcom, try going to Strategy, and load Debug Strategy Start. This will give you a debug environment.\r\nAfter loading, cancel the cinematic asap, and go see your soldiers loadout. \r\nGo to a ranger, and check the swords. A extra sword should appear.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}